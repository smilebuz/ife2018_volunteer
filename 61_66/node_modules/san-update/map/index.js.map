{"version":3,"file":"../index.js","sources":["../util.js","../command.js","../update.js","../parseName.js","../shortcut.js","../chain.js","../macro.js","../index.js"],"sourcesContent":["/**\n * san-update\n * Copyright 2016 Baidu Inc. All rights reserved.\n *\n * @file utility module\n * @author otakustay\n */\n\nexport let clone = target => {\n    let result = {};\n    /* eslint-disable guard-for-in */\n    for (let key in target) {\n        result[key] = target[key];\n    }\n    /* eslint-enable guard-for-in */\n\n    return result;\n};\n\nexport let find = (array, fn) => {\n    for (let i = 0; i < array.length; i++) {\n        let item = array[i];\n        if (fn(item)) {\n            return item;\n        }\n    }\n\n    return undefined;\n};\n\nexport let notEmpty = o => {\n    if (!o) {\n        return false;\n    }\n\n    for (let key in o) {\n        if (o.hasOwnProperty(key)) {\n            return true;\n        }\n    }\n\n    return false;\n};\n\nexport let indexOf = (array, o) => {\n    for (let i = 0; i < array.length; i++) {\n        if (array[i] === o) {\n            return i;\n        }\n    }\n\n    return -1;\n};\n\nexport let diffObject = (type, oldValue, newValue) => {\n    return {\n        $change: type,\n        oldValue: oldValue,\n        newValue: newValue\n    };\n};\n\nexport let arrayDiffObject = (oldValue, newValue, spliceIndex, deleteCount, insertions) => {\n    return {\n        $change: 'change',\n        oldValue: oldValue,\n        newValue: newValue,\n        splice: {\n            index: spliceIndex,\n            deleteCount: deleteCount,\n            insertions: insertions\n        }\n    };\n};\n","/**\n * san-update\n * Copyright 2016 Baidu Inc. All rights reserved.\n *\n * @file all available commands\n * @author otakustay\n */\n\nimport {clone, indexOf, diffObject, arrayDiffObject} from './util';\n\n/**\n * @private\n *\n * 当指令返回这个对象的时候，说明要把这个属性移除\n */\nexport const OMIT_THIS_PROPERTY = {};\n\n/**\n * @private\n */\nexport let availableCommands = {\n    $set(container, propertyName, newValue) {\n        let oldValue = container[propertyName];\n        if (newValue === oldValue) {\n            return [newValue, null];\n        }\n\n        return [\n            newValue,\n            diffObject(container.hasOwnProperty(propertyName) ? 'change' : 'add', oldValue, newValue)\n        ];\n    },\n\n    $push(container, propertyName, item) {\n        let array = container[propertyName];\n\n        if (!Array.isArray(array)) {\n            throw new Error('Usage of $push command on non array object is forbidden.');\n        }\n\n        let newValue = array.concat([item]);\n        return [\n            newValue,\n            arrayDiffObject(array, newValue, array.length, 0, [item])\n        ];\n    },\n\n    $unshift(container, propertyName, item) {\n        let array = container[propertyName];\n\n        if (!Array.isArray(array)) {\n            throw new Error('Usage of $unshift command on non array object is forbidden.');\n        }\n\n        let newValue = [item].concat(array);\n        return [\n            newValue,\n            arrayDiffObject(array, newValue, 0, 0, [item])\n        ];\n    },\n\n    $pop(container, propertyName, assert) {\n        let array = container[propertyName];\n\n        if (!Array.isArray(array)) {\n            throw new Error('Usage of $pop command on non array object is forbidden.');\n        }\n\n        if (array.length && (assert === true || (typeof assert === 'function' && assert(array)))) {\n            let newValue = array.slice(0, -1);\n            return [\n                newValue,\n                arrayDiffObject(array, newValue, array.length, 1, [])\n            ];\n        }\n\n        return [array, null];\n    },\n\n    $shift(container, propertyName, assert) {\n        let array = container[propertyName];\n\n        if (!Array.isArray(array)) {\n            throw new Error('Usage of $shift command on non array object is forbidden.');\n        }\n\n        if (array.length && (assert === true || (typeof assert === 'function' && assert(array)))) {\n            let newValue = array.slice(1);\n            return [\n                newValue,\n                arrayDiffObject(array, newValue, array.length, 1, [])\n            ];\n        }\n\n        return [array, null];\n    },\n\n    $removeAt(container, propertyName, index) {\n        let array = container[propertyName];\n\n        if (!Array.isArray(array)) {\n            throw new Error('Usage of $removeAt command on non array object is forbidden.');\n        }\n\n        if (index >= array.length || index < 0) {\n            return [array, null];\n        }\n\n        let newValue = array.slice(0, index).concat(array.slice(index + 1));\n        return [\n            newValue,\n            arrayDiffObject(array, newValue, index, 1, [])\n        ];\n    },\n\n    $remove(container, propertyName, item) {\n        let array = container[propertyName];\n\n        if (!Array.isArray(array)) {\n            throw new Error('Usage of $removeAt command on non array object is forbidden.');\n        }\n\n        let index = indexOf(array, item);\n\n        if (index === -1) {\n            return [array, null];\n        }\n\n        let newValue = array.slice(0, index).concat(array.slice(index + 1));\n        return [\n            newValue,\n            arrayDiffObject(array, newValue, index, 1, [])\n        ];\n    },\n\n    $splice(container, propertyName, [start, deleteCount, ...items]) {\n        let array = container[propertyName];\n\n        if (!Array.isArray(array)) {\n            throw new Error('Usage of $splice command on non array object is forbidden.');\n        }\n\n        let newValue = array.slice(0, start).concat(items).concat(array.slice(start + deleteCount));\n        return [\n            newValue,\n            arrayDiffObject(array, newValue, start, deleteCount, items)\n        ];\n    },\n\n    $map(container, propertyName, callback) {\n        let array = container[propertyName];\n\n        if (!Array.isArray(array)) {\n            throw new Error('Usage of $map command on non array object is forbidden.');\n        }\n\n        let newValue = array.map(callback);\n        return [\n            newValue,\n            diffObject('change', array, newValue)\n        ];\n    },\n\n    $filter(container, propertyName, callback) {\n        let array = container[propertyName];\n\n        if (!Array.isArray(array)) {\n            throw new Error('Usage of $filter command on non array object is forbidden.');\n        }\n\n        let newValue = array.filter(callback);\n        return [\n            newValue,\n            diffObject('change', array, newValue)\n        ];\n    },\n\n    $reduce(container, propertyName, args) {\n        let array = container[propertyName];\n\n        if (!Array.isArray(array)) {\n            throw new Error('Usage of $reduce command on non array object is forbidden.');\n        }\n\n        // .reduce(callback) : .reduce(callback, initialValue)\n        let newValue = typeof args === 'function' ? array.reduce(args) : array.reduce(...args);\n        return [\n            newValue,\n            diffObject('change', array, newValue)\n        ];\n    },\n\n    $merge(container, propertyName, extensions) {\n        let target = container[propertyName] || {};\n        let newValue = clone(target);\n        let diff = {};\n        for (let key in extensions) {\n            if (extensions.hasOwnProperty(key)) {\n                let newPropertyValue = extensions[key];\n                let oldPropertyValue = target[key];\n                if (newPropertyValue !== oldPropertyValue) {\n                    newValue[key] = newPropertyValue;\n                    let changeType = target.hasOwnProperty(key) ? 'change' : 'add';\n                    diff[key] = diffObject(changeType, oldPropertyValue, newPropertyValue);\n                }\n            }\n        }\n\n        return [newValue, diff];\n    },\n\n    $defaults(container, propertyName, defaults) {\n        let target = container[propertyName];\n        let newValue = clone(target);\n        let diff = {};\n        for (let key in defaults) {\n            if (defaults.hasOwnProperty(key) && newValue[key] === undefined) {\n                newValue[key] = defaults[key];\n                diff[key] = diffObject('add', undefined, defaults[key]);\n            }\n        }\n\n        return [newValue, diff];\n    },\n\n    $apply(container, propertyName, factory) {\n        let newValue = factory(container[propertyName]);\n        return [\n            newValue,\n            diffObject(container.hasOwnProperty(propertyName) ? 'change' : 'add', container[propertyName], newValue)\n        ];\n    },\n\n    $omit(container, propertyName, assert) {\n        let value = container[propertyName];\n\n        if (assert === true || (typeof assert === 'function' && assert(value))) {\n            return [\n                OMIT_THIS_PROPERTY,\n                diffObject('remove', value, undefined)\n            ];\n        }\n\n        return [value, null];\n    },\n\n    $composeBefore(container, propertyName, before) {\n        let fn = container[propertyName];\n\n        if (typeof fn !== 'function') {\n            throw new Error('Usage of $composeBefore command on non function object is forbidden.');\n        }\n\n        if (typeof before !== 'function') {\n            throw new Error('Passing non function object to $composeBefore command is forbidden');\n        }\n\n        let newValue = (...args) => fn(before(...args));\n        return [\n            newValue,\n            diffObject('change', fn, newValue)\n        ];\n    },\n\n    $composeAfter(container, propertyName, after) {\n        let fn = container[propertyName];\n\n        if (typeof fn !== 'function') {\n            throw new Error('Usage of $composeAfter command on non function object is forbidden.');\n        }\n\n        if (typeof after !== 'function') {\n            throw new Error('Passing non function object to $composeAfter command is forbidden');\n        }\n\n        let newValue = (...args) => after(fn(...args));\n        return [\n            newValue,\n            diffObject('change', fn, newValue)\n        ];\n    }\n};\n\n/**\n * @private\n */\nexport let availableCommandKeys = Object.keys(availableCommands);\n\n/**\n * @private\n */\nexport let availableCommandNames = availableCommandKeys.map(key => key.slice(1));\n","/**\n * san-update\n * Copyright 2016 Baidu Inc. All rights reserved.\n *\n * @file update helper module\n * @author otakustay\n */\n\nimport {find, notEmpty} from './util';\nimport {availableCommands, availableCommandKeys, OMIT_THIS_PROPERTY} from './command';\n\n/**\n * 根据提供的指令更新一个对象，返回更新后的新对象及差异对象，原对象不会作任何的修改\n *\n * 现有支持的指令包括：\n *\n * - `$set`：修改指定的属性值\n * - `$push`：向类型为数组的属性尾部添加元素\n * - `$unshift`：向类型为数组的属性头部添加元素\n * - `$pop`：移除类型为数组的属性的尾部元素\n * - `$shift`：移除类型为数组的属性的头部元素\n * - `$removeAt`：移除类型为数组的属性的指定位置的元素\n * - `$remove`：移除类型为数组的属性的指定元素，使用`===`判等且仅移除第一个遇到的元素\n * - `$splice`：通过索引、移除数目、插入元素操作类型为数组的属性\n * - `$map`：对类型为数组的属性进行`map`操作\n * - `$filter`：对类型为数组的属性进行`filter`操作\n * - `$reduce`：对类型为数组的属性进行`reduce`操作\n * - `$merge`：将2个对象进行浅合并（不递归）\n * - `$defaults`：将指定对象的属性值填到原属性为'undefined`的'性上\n * - `$apply`：用一个工厂函数的返回值作为`$set`指令的输入，工厂函数接受属性的旧值作为唯一的参数\n * - `$omit`：用于移除某个属性，传递`boolean`值来确认是否移除（`true`为移除），也可传递一个函数（参数为旧值）用其返回值确认是否移除\n * - `$composeBefore`：组合类型为函数的属性为一个新的函数，新函数首先调用compose提供的函数，随后调用原函数\n * - `$composeAfter`：组合类型为函数的属性为一个新的函数，新函数首先调用原函数，随后调用compose提供的函数\n *\n * 可以在一次更新操作中对不同的属性用不同的指令：\n *\n * ```javascript\n * import {withDiff} from 'san-update';\n *\n * let [newObject, diff] = withDiff(\n *     source,\n *     {\n *         foo: {bar: {$set: 1}},\n *         alice: {$push: 1},\n *         tom: {jack: {$set: {x: 1}}\n *     }\n * );\n * ```\n *\n * @param {Object} source 待更新的对象\n * @param {Object} commands 用于更新的指令\n * @return {[Object, Object]} 返回一个Tuple数组，其中第1项为更新结果，第2项为差异对象\n */\nexport let withDiff = (source, commands) => {\n    // 如果根节点就是个指令，那么直接对输入的对象进行操作，不需要再遍历属性了\n    let possibleRootCommand = find(availableCommandKeys, key => commands.hasOwnProperty(key));\n    if (possibleRootCommand) {\n        let wrapper = {source};\n        let commandValue = commands[possibleRootCommand];\n        return availableCommands[possibleRootCommand](wrapper, 'source', commandValue);\n    }\n\n    // ({string} key) => [newValue, diff]\n    let executeCommand = key => {\n        let propertyCommand = commands[key];\n        let availableCommand = find(availableCommandKeys, key => propertyCommand.hasOwnProperty(key));\n\n        // 找到指令节点后，对当前属性进行更新，\n        // 如果这个节点不代表指令，那么肯定它的某个属性（或子属性）是指令，继续递归往下找\n        return availableCommand\n            ? availableCommands[availableCommand](source, key, propertyCommand[availableCommand])\n            : withDiff(source[key] || {}, propertyCommand);\n    };\n\n    // 因为可能通过指令增加一些原本没有的属性，所以最后还要对`commands`做一次遍历来确保没有漏掉\n    let patchNewProperties = (result, diff) => {\n        for (let key in commands) {\n            if (result.hasOwnProperty(key) || !commands.hasOwnProperty(key)) {\n                continue;\n            }\n\n            let [newValue, propertyDiff] = executeCommand(key);\n            // 理论上因为全是新属性，所以这里的`propertyDiff`不可能是空的\n            diff[key] = propertyDiff;\n\n            if (newValue !== OMIT_THIS_PROPERTY) {\n                result[key] = newValue;\n            }\n        }\n\n        return [result, diff];\n    };\n\n    if (Array.isArray(source)) {\n        let result = [];\n        let diff = {};\n        for (let i = 0; i < source.length; i++) {\n            // 没有对应的指令，自然是不更新的，直接复制过去\n            if (!commands.hasOwnProperty(i)) {\n                result.push(source[i]);\n                continue;\n            }\n\n            let [newValue, propertyDiff] = executeCommand(i);\n            if (notEmpty(propertyDiff)) {\n                diff[i] = propertyDiff;\n            }\n            if (newValue !== OMIT_THIS_PROPERTY) {\n                result.push(newValue);\n            }\n        }\n\n        return patchNewProperties(result, diff);\n    }\n\n    let result = {};\n    let diff = {};\n    for (let key in source) {\n        // 没有对应的指令，自然是不更新的，直接复制过去\n        if (!commands.hasOwnProperty(key)) {\n            result[key] = source[key];\n            continue;\n        }\n\n        let [newValue, propertyDiff] = executeCommand(key);\n        if (notEmpty(propertyDiff)) {\n            diff[key] = propertyDiff;\n        }\n        if (newValue !== OMIT_THIS_PROPERTY) {\n            result[key] = newValue;\n        }\n    }\n\n    return patchNewProperties(result, diff);\n};\n\n/**\n * 根据提供的指令更新一个对象，返回更新后的新对象，原对象不会作任何的修改\n *\n * 具体详情参考`withDiff`的文档\n *\n * ```javascript\n * import {update} from 'san-update';\n *\n * let newObject = withDiff(\n *     source,\n *     {\n *         foo: {bar: {$set: 1}},\n *         alice: {$push: 1},\n *         tom: {jack: {$set: {x: 1}}\n *     }\n * );\n * ```\n *\n * @param {Object} source 待更新的对象\n * @param {Object} commands 用于更新的指令\n * @return {Object} 更新后的对象\n */\nexport let update = (source, commands) => withDiff(source, commands)[0];\n","/**\n * san-update\n * Copyright 2016 Baidu Inc. All rights reserved.\n *\n * @file parse property name\n * @author otakustay\n */\n\nconst LEFT_SQUARE_BRACKET = '['.charCodeAt(0);\n\nexport default source => {\n    if (Array.isArray(source)) {\n        return source;\n    }\n\n    // 这个简易的非状态机的实现是有缺陷的\n    // 比如 a['dd.cc'].b 这种就有问题了，不过我们不考虑这种场景\n    let terms = (source + '').split('.');\n    let result = [];\n\n    for (let i = 0; i < terms.length; i++) {\n        let term = terms[i];\n        let propAccessorStart = term.indexOf('[');\n\n\n        if (propAccessorStart >= 0) {\n            if (propAccessorStart > 0) {\n                result.push(term.slice(0, propAccessorStart));\n                term = term.slice(propAccessorStart);\n            }\n\n            while (term.charCodeAt(0) === LEFT_SQUARE_BRACKET) {\n                let propAccessorEnd = term.indexOf(']');\n                if (propAccessorEnd < 0) {\n                    throw new Error('Property path syntax error: ' + source);\n                }\n\n                let propAccessorLiteral = term.slice(1, propAccessorEnd);\n                if (/^[0-9]+$/.test(propAccessorLiteral)) {\n                    // for number\n                    result.push(+propAccessorLiteral);\n                }\n                else if (/^(['\"])([^\\1]+)\\1$/.test(propAccessorLiteral)) {\n                    // for string literal\n                    result.push((new Function('return ' + propAccessorLiteral))());\n                }\n                else {\n                    throw new Error('Property path syntax error: ' + source);\n                }\n\n                term = term.slice(propAccessorEnd + 1);\n            }\n        }\n        else {\n            result.push(term);\n        }\n    }\n\n    return result;\n};\n","/**\n * san-update\n * Copyright 2016 Baidu Inc. All rights reserved.\n *\n * @file shortcut functions\n * @author otakustay\n */\n\nimport {update} from './update';\nimport parseName from './parseName';\n\nlet buildPathObject = (propertyName, value) => {\n    if (propertyName == null) {\n        return value;\n    }\n\n    let path = parseName(propertyName);\n\n    let result = {};\n    let current = result;\n    for (let i = 0; i < path.length - 1; i++) {\n        current = current[path[i]] = {};\n    }\n    current[path[path.length - 1]] = value;\n    return result;\n};\n\n/**\n * 针对`$set`指令的快捷函数\n *\n * @param {Object} source 待更新的对象\n * @param {string?|Array.<string>|number?|Array.<number>} path 属性的路径，如果更新二层以上的属性则需要提供一个字符串数组，\n *     如果该参数为'undefined`或`null`，则会直接对`source`对象进行更'操作\n * @param {*} value 用于更新的值\n * @return {Object} 更新后的新对象\n */\nexport let set = (source, path, value) => update(source, buildPathObject(path, {$set: value}));\n\n/**\n * 针对`$push`指令的快捷函数\n *\n * @param {Object} source 待更新的对象\n * @param {string?|Array.<string>|number?|Array.<number>} path 属性的路径，如果更新二层以上的属性则需要提供一个字符串数组，\n *     如果该参数为'undefined`或`null`，则会直接对`source`对象进行更'操作\n * @param {*} value 用于更新的值\n * @return {Object} 更新后的新对象\n */\nexport let push = (source, path, value) => update(source, buildPathObject(path, {$push: value}));\n\n/**\n * 针对`$unshift`指令的快捷函数\n *\n * @param {Object} source 待更新的对象\n * @param {string?|Array.<string>|number?|Array.<number>} path 属性的路径，如果更新二层以上的属性则需要提供一个字符串数组，\n *     如果该参数为'undefined`或`null`，则会直接对`source`对象进行更'操作\n * @param {*} value 用于更新的值\n * @return {Object} 更新后的新对象\n */\nexport let unshift = (source, path, value) => update(source, buildPathObject(path, {$unshift: value}));\n\n/**\n * 针对`$pop`指令的快捷函数\n *\n * @param {Object} source 待更新的对象\n * @param {string?|Array.<string>|number?|Array.<number>} path 属性的路径，如果更新二层以上的属性则需要提供一个字符串数组，\n *     如果该参数为'undefined`或`null`，则会直接对`source`对象进行更'操作\n * @param {boolean|Function} assert 用于确认是否要移除属性的判断条件或函数\n * @return {Object} 更新后的新对象\n */\nexport let pop = (source, path, assert) => update(source, buildPathObject(path, {$pop: assert}));\n\n/**\n * 针对`$shift`指令的快捷函数\n *\n * @param {Object} source 待更新的对象\n * @param {string?|Array.<string>|number?|Array.<number>} path 属性的路径，如果更新二层以上的属性则需要提供一个字符串数组，\n *     如果该参数为'undefined`或`null`，则会直接对`source`对象进行更'操作\n * @param {boolean|Function} assert 用于确认是否要移除属性的判断条件或函数\n * @return {Object} 更新后的新对象\n */\nexport let shift = (source, path, assert) => update(source, buildPathObject(path, {$shift: assert}));\n\n/**\n * 针对`$removeAt`指令的快捷函数\n *\n * @param {Object} source 待更新的对象\n * @param {string?|Array.<string>|number?|Array.<number>} path 属性的路径，如果更新二层以上的属性则需要提供一个字符串数组，\n *     如果该参数为'undefined`或`null`，则会直接对`source`对象进行更'操作\n * @param {number} index 需要删除的索引\n * @return {Object} 更新后的新对象\n */\nexport let removeAt = (source, path, index) => update(source, buildPathObject(path, {$removeAt: index}));\n\n/**\n * 针对`$remove`指令的快捷函数\n *\n * @param {Object} source 待更新的对象\n * @param {string?|Array.<string>|number?|Array.<number>} path 属性的路径，如果更新二层以上的属性则需要提供一个字符串数组，\n *     如果该参数为'undefined`或`null`，则会直接对`source`对象进行更'操作\n * @param {*} value 需要删除的值\n * @return {Object} 更新后的新对象\n */\nexport let remove = (source, path, value) => update(source, buildPathObject(path, {$remove: value}));\n\n/**\n * 针对`$splice`指令的快捷函数\n *\n * @param {Object} source 待更新的对象\n * @param {string?|Array.<string>|number?|Array.<number>} path 属性的路径，如果更新二层以上的属性则需要提供一个字符串数组，\n *     如果该参数为'undefined`或`null`，则会直接对`source`对象进行更'操作\n * @param {number} start 插入起始位置\n * @param {number} deleteCount 删除的元素个数\n * @param {...*} items 插入的元素\n * @return {Object} 更新后的新对象\n */\nexport let splice = (source, path, start, deleteCount, ...items) => {\n    let args = [start, deleteCount, ...items];\n    return update(source, buildPathObject(path, {$splice: args}));\n};\n\n/**\n * 针对`$map`指令的快捷函数\n *\n * @param {Object} source 待更新的对象\n * @param {string?|Array.<string>|number?|Array.<number>} path 属性的路径，如果更新二层以上的属性则需要提供一个字符串数组，\n *     如果该参数为'undefined`或`null`，则会直接对`source`对象进行更'操作\n * @param {Function} callback 回调函数\n * @return {Object} 更新后的新对象\n */\nexport let map = (source, path, callback) => update(source, buildPathObject(path, {$map: callback}));\n\n/**\n * 针对`$filter`指令的快捷函数\n *\n * @param {Object} source 待更新的对象\n * @param {string?|Array.<string>|number?|Array.<number>} path 属性的路径，如果更新二层以上的属性则需要提供一个字符串数组，\n *     如果该参数为'undefined`或`null`，则会直接对`source`对象进行更'操作\n * @param {Function} callback 回调函数\n * @return {Object} 更新后的新对象\n */\nexport let filter = (source, path, callback) => update(source, buildPathObject(path, {$filter: callback}));\n\n/**\n * 针对`$reduce`指令的快捷函数\n *\n * @param {Object} source 待更新的对象\n * @param {string?|Array.<string>|number?|Array.<number>} path 属性的路径，如果更新二层以上的属性则需要提供一个字符串数组，\n *     如果该参数为'undefined`或`null`，则会直接对`source`对象进行更'操作\n * @param {...*} args 调用`reduce`时的参数，可以为`{Function} callback`或`{Function} callback, {*} initialValue`\n * @return {Object} 更新后的新对象\n */\nexport let reduce = (source, path, ...args) => {\n    let command = args.length === 1 ? {$reduce: args[0]} : {$reduce: args};\n    return update(source, buildPathObject(path, command));\n};\n\n/**\n * 针对`$merge`指令的快捷函数\n *\n * @param {Object} source 待更新的对象\n * @param {string?|Array.<string>|number?|Array.<number>} path 属性的路径，如果更新二层以上的属性则需要提供一个字符串数组，\n *     如果该参数为'undefined`或`null`，则会直接对`source`对象进行更'操作\n * @param {*} value 用于更新的值\n * @return {Object} 更新后的新对象\n */\nexport let merge = (source, path, value) => update(source, buildPathObject(path, {$merge: value}));\n\n/**\n * 针对`$defaults`指令的快捷函数\n *\n * @param {Object} source 待更新的对象\n * @param {string?|Array.<string>|number?|Array.<number>} path 属性的路径，如果更新二层以上的属性则需要提供一个字符串数组，\n *     如果该参数为'undefined`或`null`，则会直接对`source`对象进行更'操作\n * @param {*} value 用于更新的值\n * @return {Object} 更新后的新对象\n */\nexport let defaults = (source, path, value) => update(source, buildPathObject(path, {$defaults: value}));\n\n/**\n * 针对`$apply`指令的快捷函数\n *\n * @param {Object} source 待更新的对象\n * @param {string?|Array.<string>|number?|Array.<number>} path 属性的路径，如果更新二层以上的属性则需要提供一个字符串数组，\n *     如果该参数为'undefined`或`null`，则会直接对`source`对象进行更'操作\n * @param {Function} factory 用于生成新值的工厂函数\n * @return {Object} 更新后的新对象\n */\nexport let apply = (source, path, factory) => update(source, buildPathObject(path, {$apply: factory}));\n\n/**\n * 针对`$omit`指令的快捷函数，其中`assert`参数默认值为`true`\n *\n * @param {Object} source 待更新的对象\n * @param {string?|Array.<string>|number?|Array.<number>} path 属性的路径，如果更新二层以上的属性则需要提供一个字符串数组，\n *     如果该参数为'undefined`或`null`，则会直接对`source`对象进行更'操作\n * @param {boolean|Function} assert 用于确认是否要移除属性的判断条件或函数\n * @return {Object} 更新后的新对象\n */\nexport let omit = (source, path, assert = true) => update(source, buildPathObject(path, {$omit: assert}));\n\n/**\n * 针对`$omit`指令的快捷函数，其中`assert`参数默认值为`true`\n *\n * @param {Object} source 待更新的对象\n * @param {string?|Array.<string>|number?|Array.<number>} path 属性的路径，如果更新二层以上的属性则需要提供一个字符串数组，\n *     如果该参数为'undefined`或`null`，则会直接对`source`对象进行更'操作\n * @param {Function} before 包装函数，该函数会在原函数前执行，且返回值传递给原函数作为参数\n * @return {Object} 更新后的新对象\n */\nexport let composeBefore = (source, path, before) => update(source, buildPathObject(path, {$composeBefore: before}));\n\n/**\n * 针对`$omit`指令的快捷函数，其中`assert`参数默认值为`true`\n *\n * @param {Object} source 待更新的对象\n * @param {string?|Array.<string>|number?|Array.<number>} path 属性的路径，如果更新二层以上的属性则需要提供一个字符串数组，\n *     如果该参数为'undefined`或`null`，则会直接对`source`对象进行更'操作\n * @param {Function} after 包装函数，该函数会在原函数后执行，且接收原函数返回值作为参数\n * @return {Object} 更新后的新对象\n */\nexport let composeAfter = (source, path, after) => update(source, buildPathObject(path, {$composeAfter: after}));\n\n/**\n * 支持通过依赖计算属性值的更新快捷函数\n *\n * 此函数仅有快捷方式，在`update`函数时不能使用此指令\n *\n * 此函数必须指定`path`参数，不能直接对对象本身使用\n *\n * @param {Object} source 待更新的对象\n * @param {string?|Array.<string>|number?|Array.<number>} path 属性的路径，如果更新二层以上的属性则需要提供一个字符串数组\n * @param {Function|Array.<Function>} selectors 用于获取`factory`的依赖参数的函数，每个函数返回一个值作为`factory`的参数\n * @param {Function} factory 用于生成新值的工厂函数，该函数前n个参数是`selectors`参数的返回值，最后一个参数为需要更新的属性的当前值\n * @return {Object} 更新后的新对象\n */\nexport let applyWith = (source, path, selectors, factory) => {\n    if (Array.isArray(selectors)) {\n        let dependencies = selectors.map(select => select(source));\n        let boundFactory = value => factory(...dependencies, value);\n        return apply(source, path, boundFactory);\n    }\n\n    let dependency = selectors(source);\n    let boundFactory = value => factory(dependency, value);\n    return apply(source, path, boundFactory);\n};\n","/**\n * san-update\n * Copyright 2016 Baidu Inc. All rights reserved.\n *\n * @file chainning wrap\n * @author otakustay\n */\n\nimport {update, withDiff} from './update';\nimport {availableCommandNames} from './command';\nimport {merge} from './shortcut';\n\nconst EMPTY_COMMANDS = {};\n\nlet createUpdater = (value, commands) => availableCommandNames.reduce(\n    (updater, shortcut) => {\n        updater[shortcut] = (path, ...args) => {\n            let additionCommand = {['$' + shortcut]: args.length === 1 ? args[0] : args};\n            let newCommands = merge(commands, path, additionCommand);\n            return createUpdater(value, newCommands);\n        };\n        return updater;\n    },\n    {\n        value() {\n            return update(value, commands);\n        },\n\n        withDiff() {\n            return withDiff(value, commands);\n        }\n    }\n);\n\n/**\n * 包装一个对象为可链式调用更新的对象\n *\n * 包装后的对象带有所有更新快捷方式，同时使用`value()`可获取更新后的值\n *\n * @param {Object} source 包装的对象\n * @return {Object} 可执行所有用于更新的命令\n */\nexport default source => createUpdater(source, EMPTY_COMMANDS);\n","/**\n * san-update\n * Copyright 2016 Baidu Inc. All rights reserved.\n *\n * @file macro builder\n * @author otakustay\n */\n\nimport {update, withDiff} from './update';\nimport {availableCommandNames} from './command';\nimport {merge} from './shortcut';\n\nlet createMacro = commands => availableCommandNames.reduce(\n    (macro, shortcut) => {\n        macro[shortcut] = (path, ...args) => {\n            let additionCommand = {['$' + shortcut]: args.length === 1 ? args[0] : args};\n            let newCommands = merge(commands, path, additionCommand);\n            return createMacro(newCommands);\n        };\n        return macro;\n    },\n    {\n        build() {\n            let result = value => update(value, commands);\n            result.withDiff = value => withDiff(value, commands);\n            return result;\n        },\n\n        buildWithDiff() {\n            return value => withDiff(value, commands);\n        }\n    }\n);\n\nconst INITIAL_MACRO = createMacro({});\n\n/**\n * 包装一个更新指令为Macro\n *\n * 一个Macro带有所有更新的快捷方式，每一次调用都会生成一个新的Macro，最终使用`build()`可以生成一个包含所有指令的更新对象的函数。\n *\n * @return {Object} 包含所有更新快捷方式的Macro\n */\nexport default () => INITIAL_MACRO;\n","/**\n * san-update\n * Copyright 2016 Baidu Inc. All rights reserved.\n *\n * @file entry module\n * @author otakustay\n */\n\nimport chain from './chain';\nimport macro from './macro';\n\nexport {update, withDiff} from './update';\nexport {\n    chain as chain,\n    chain as immutable\n};\nexport {\n    macro as macro,\n    macro as builder,\n    macro as updateBuilder\n};\nexport {\n    set,\n    push, unshift, pop, shift, removeAt, remove, splice,\n    map, filter, reduce,\n    merge, defaults,\n    apply,\n    omit,\n    composeBefore, composeAfter,\n    applyWith\n} from './shortcut';\n"],"names":["clone","result","key","target","find","array","fn","i","length","item","undefined","notEmpty","o","hasOwnProperty","indexOf","diffObject","type","oldValue","newValue","arrayDiffObject","spliceIndex","deleteCount","insertions","OMIT_THIS_PROPERTY","availableCommands","container","propertyName","Array","isArray","Error","concat","assert","slice","index","start","items","callback","map","filter","args","reduce","extensions","diff","newPropertyValue","oldPropertyValue","changeType","defaults","factory","value","before","after","availableCommandKeys","Object","keys","availableCommandNames","withDiff","source","commands","possibleRootCommand","wrapper","commandValue","executeCommand","propertyCommand","availableCommand","patchNewProperties","propertyDiff","push","update","LEFT_SQUARE_BRACKET","charCodeAt","terms","split","term","propAccessorStart","propAccessorEnd","propAccessorLiteral","test","Function","buildPathObject","path","parseName","current","set","$set","$push","unshift","$unshift","pop","$pop","shift","$shift","removeAt","$removeAt","remove","$remove","splice","$splice","$map","$filter","command","$reduce","merge","$merge","$defaults","apply","$apply","omit","$omit","composeBefore","$composeBefore","composeAfter","$composeAfter","applyWith","selectors","dependencies","select","boundFactory","dependency","EMPTY_COMMANDS","createUpdater","updater","shortcut","additionCommand","newCommands","createMacro","macro","INITIAL_MACRO"],"mappings":";;;;;;AAAA;;;;;;;;AAQA,AAAO,IAAIA,QAAQ,SAARA,KAAQ,SAAU;QACrBC,SAAS,EAAb;;SAEK,IAAIC,GAAT,IAAgBC,MAAhB,EAAwB;eACbD,GAAP,IAAcC,OAAOD,GAAP,CAAd;;;;WAIGD,MAAP;CARG;;AAWP,AAAO,IAAIG,OAAO,SAAPA,IAAO,CAACC,KAAD,EAAQC,EAAR,EAAe;SACxB,IAAIC,IAAI,CAAb,EAAgBA,IAAIF,MAAMG,MAA1B,EAAkCD,GAAlC,EAAuC;YAC/BE,OAAOJ,MAAME,CAAN,CAAX;YACID,GAAGG,IAAH,CAAJ,EAAc;mBACHA,IAAP;;;;WAIDC,SAAP;CARG;;AAWP,AAAO,IAAIC,WAAW,SAAXA,QAAW,IAAK;QACnB,CAACC,CAAL,EAAQ;eACG,KAAP;;;SAGC,IAAIV,GAAT,IAAgBU,CAAhB,EAAmB;YACXA,EAAEC,cAAF,CAAiBX,GAAjB,CAAJ,EAA2B;mBAChB,IAAP;;;;WAID,KAAP;CAXG;;AAcP,AAAO,IAAIY,UAAU,SAAVA,OAAU,CAACT,KAAD,EAAQO,CAAR,EAAc;SAC1B,IAAIL,IAAI,CAAb,EAAgBA,IAAIF,MAAMG,MAA1B,EAAkCD,GAAlC,EAAuC;YAC/BF,MAAME,CAAN,MAAaK,CAAjB,EAAoB;mBACTL,CAAP;;;;WAID,CAAC,CAAR;CAPG;;AAUP,AAAO,IAAIQ,aAAa,SAAbA,UAAa,CAACC,IAAD,EAAOC,QAAP,EAAiBC,QAAjB,EAA8B;WAC3C;iBACMF,IADN;kBAEOC,QAFP;kBAGOC;KAHd;CADG;;AAQP,AAAO,IAAIC,kBAAkB,SAAlBA,eAAkB,CAACF,QAAD,EAAWC,QAAX,EAAqBE,WAArB,EAAkCC,WAAlC,EAA+CC,UAA/C,EAA8D;WAChF;iBACM,QADN;kBAEOL,QAFP;kBAGOC,QAHP;gBAIK;mBACGE,WADH;yBAESC,WAFT;wBAGQC;;KAPpB;CADG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9DP;;;;;;;;AAQA,AAEA;;;;;AAKA,AAAO,IAAMC,qBAAqB,EAA3B;;;;;AAKP,AAAO,IAAIC,oBAAoB;QAAA,gBACtBC,SADsB,EACXC,YADW,EACGR,QADH,EACa;YAChCD,WAAWQ,UAAUC,YAAV,CAAf;YACIR,aAAaD,QAAjB,EAA2B;mBAChB,CAACC,QAAD,EAAW,IAAX,CAAP;;;eAGG,CACHA,QADG,EAEHH,WAAWU,UAAUZ,cAAV,CAAyBa,YAAzB,IAAyC,QAAzC,GAAoD,KAA/D,EAAsET,QAAtE,EAAgFC,QAAhF,CAFG,CAAP;KAPuB;SAAA,iBAarBO,SAbqB,EAaVC,YAbU,EAaIjB,IAbJ,EAaU;YAC7BJ,QAAQoB,UAAUC,YAAV,CAAZ;;YAEI,CAACC,MAAMC,OAAN,CAAcvB,KAAd,CAAL,EAA2B;kBACjB,IAAIwB,KAAJ,CAAU,0DAAV,CAAN;;;YAGAX,WAAWb,MAAMyB,MAAN,CAAa,CAACrB,IAAD,CAAb,CAAf;eACO,CACHS,QADG,EAEHC,gBAAgBd,KAAhB,EAAuBa,QAAvB,EAAiCb,MAAMG,MAAvC,EAA+C,CAA/C,EAAkD,CAACC,IAAD,CAAlD,CAFG,CAAP;KArBuB;YAAA,oBA2BlBgB,SA3BkB,EA2BPC,YA3BO,EA2BOjB,IA3BP,EA2Ba;YAChCJ,QAAQoB,UAAUC,YAAV,CAAZ;;YAEI,CAACC,MAAMC,OAAN,CAAcvB,KAAd,CAAL,EAA2B;kBACjB,IAAIwB,KAAJ,CAAU,6DAAV,CAAN;;;YAGAX,WAAW,CAACT,IAAD,EAAOqB,MAAP,CAAczB,KAAd,CAAf;eACO,CACHa,QADG,EAEHC,gBAAgBd,KAAhB,EAAuBa,QAAvB,EAAiC,CAAjC,EAAoC,CAApC,EAAuC,CAACT,IAAD,CAAvC,CAFG,CAAP;KAnCuB;QAAA,gBAyCtBgB,SAzCsB,EAyCXC,YAzCW,EAyCGK,MAzCH,EAyCW;YAC9B1B,QAAQoB,UAAUC,YAAV,CAAZ;;YAEI,CAACC,MAAMC,OAAN,CAAcvB,KAAd,CAAL,EAA2B;kBACjB,IAAIwB,KAAJ,CAAU,yDAAV,CAAN;;;YAGAxB,MAAMG,MAAN,KAAiBuB,WAAW,IAAX,IAAoB,OAAOA,MAAP,KAAkB,UAAlB,IAAgCA,OAAO1B,KAAP,CAArE,CAAJ,EAA0F;gBAClFa,WAAWb,MAAM2B,KAAN,CAAY,CAAZ,EAAe,CAAC,CAAhB,CAAf;mBACO,CACHd,QADG,EAEHC,gBAAgBd,KAAhB,EAAuBa,QAAvB,EAAiCb,MAAMG,MAAvC,EAA+C,CAA/C,EAAkD,EAAlD,CAFG,CAAP;;;eAMG,CAACH,KAAD,EAAQ,IAAR,CAAP;KAxDuB;UAAA,kBA2DpBoB,SA3DoB,EA2DTC,YA3DS,EA2DKK,MA3DL,EA2Da;YAChC1B,QAAQoB,UAAUC,YAAV,CAAZ;;YAEI,CAACC,MAAMC,OAAN,CAAcvB,KAAd,CAAL,EAA2B;kBACjB,IAAIwB,KAAJ,CAAU,2DAAV,CAAN;;;YAGAxB,MAAMG,MAAN,KAAiBuB,WAAW,IAAX,IAAoB,OAAOA,MAAP,KAAkB,UAAlB,IAAgCA,OAAO1B,KAAP,CAArE,CAAJ,EAA0F;gBAClFa,WAAWb,MAAM2B,KAAN,CAAY,CAAZ,CAAf;mBACO,CACHd,QADG,EAEHC,gBAAgBd,KAAhB,EAAuBa,QAAvB,EAAiCb,MAAMG,MAAvC,EAA+C,CAA/C,EAAkD,EAAlD,CAFG,CAAP;;;eAMG,CAACH,KAAD,EAAQ,IAAR,CAAP;KA1EuB;aAAA,qBA6EjBoB,SA7EiB,EA6ENC,YA7EM,EA6EQO,KA7ER,EA6Ee;YAClC5B,QAAQoB,UAAUC,YAAV,CAAZ;;YAEI,CAACC,MAAMC,OAAN,CAAcvB,KAAd,CAAL,EAA2B;kBACjB,IAAIwB,KAAJ,CAAU,8DAAV,CAAN;;;YAGAI,SAAS5B,MAAMG,MAAf,IAAyByB,QAAQ,CAArC,EAAwC;mBAC7B,CAAC5B,KAAD,EAAQ,IAAR,CAAP;;;YAGAa,WAAWb,MAAM2B,KAAN,CAAY,CAAZ,EAAeC,KAAf,EAAsBH,MAAtB,CAA6BzB,MAAM2B,KAAN,CAAYC,QAAQ,CAApB,CAA7B,CAAf;eACO,CACHf,QADG,EAEHC,gBAAgBd,KAAhB,EAAuBa,QAAvB,EAAiCe,KAAjC,EAAwC,CAAxC,EAA2C,EAA3C,CAFG,CAAP;KAzFuB;WAAA,mBA+FnBR,SA/FmB,EA+FRC,YA/FQ,EA+FMjB,IA/FN,EA+FY;YAC/BJ,QAAQoB,UAAUC,YAAV,CAAZ;;YAEI,CAACC,MAAMC,OAAN,CAAcvB,KAAd,CAAL,EAA2B;kBACjB,IAAIwB,KAAJ,CAAU,8DAAV,CAAN;;;YAGAI,QAAQnB,QAAQT,KAAR,EAAeI,IAAf,CAAZ;;YAEIwB,UAAU,CAAC,CAAf,EAAkB;mBACP,CAAC5B,KAAD,EAAQ,IAAR,CAAP;;;YAGAa,WAAWb,MAAM2B,KAAN,CAAY,CAAZ,EAAeC,KAAf,EAAsBH,MAAtB,CAA6BzB,MAAM2B,KAAN,CAAYC,QAAQ,CAApB,CAA7B,CAAf;eACO,CACHf,QADG,EAEHC,gBAAgBd,KAAhB,EAAuBa,QAAvB,EAAiCe,KAAjC,EAAwC,CAAxC,EAA2C,EAA3C,CAFG,CAAP;KA7GuB;WAAA,mBAmHnBR,SAnHmB,EAmHRC,YAnHQ,QAmHsC;;YAA/BQ,KAA+B;YAAxBb,WAAwB;YAARc,KAAQ;;YACzD9B,QAAQoB,UAAUC,YAAV,CAAZ;;YAEI,CAACC,MAAMC,OAAN,CAAcvB,KAAd,CAAL,EAA2B;kBACjB,IAAIwB,KAAJ,CAAU,4DAAV,CAAN;;;YAGAX,WAAWb,MAAM2B,KAAN,CAAY,CAAZ,EAAeE,KAAf,EAAsBJ,MAAtB,CAA6BK,KAA7B,EAAoCL,MAApC,CAA2CzB,MAAM2B,KAAN,CAAYE,QAAQb,WAApB,CAA3C,CAAf;eACO,CACHH,QADG,EAEHC,gBAAgBd,KAAhB,EAAuBa,QAAvB,EAAiCgB,KAAjC,EAAwCb,WAAxC,EAAqDc,KAArD,CAFG,CAAP;KA3HuB;QAAA,gBAiItBV,SAjIsB,EAiIXC,YAjIW,EAiIGU,QAjIH,EAiIa;YAChC/B,QAAQoB,UAAUC,YAAV,CAAZ;;YAEI,CAACC,MAAMC,OAAN,CAAcvB,KAAd,CAAL,EAA2B;kBACjB,IAAIwB,KAAJ,CAAU,yDAAV,CAAN;;;YAGAX,WAAWb,MAAMgC,GAAN,CAAUD,QAAV,CAAf;eACO,CACHlB,QADG,EAEHH,WAAW,QAAX,EAAqBV,KAArB,EAA4Ba,QAA5B,CAFG,CAAP;KAzIuB;WAAA,mBA+InBO,SA/ImB,EA+IRC,YA/IQ,EA+IMU,QA/IN,EA+IgB;YACnC/B,QAAQoB,UAAUC,YAAV,CAAZ;;YAEI,CAACC,MAAMC,OAAN,CAAcvB,KAAd,CAAL,EAA2B;kBACjB,IAAIwB,KAAJ,CAAU,4DAAV,CAAN;;;YAGAX,WAAWb,MAAMiC,MAAN,CAAaF,QAAb,CAAf;eACO,CACHlB,QADG,EAEHH,WAAW,QAAX,EAAqBV,KAArB,EAA4Ba,QAA5B,CAFG,CAAP;KAvJuB;WAAA,mBA6JnBO,SA7JmB,EA6JRC,YA7JQ,EA6JMa,IA7JN,EA6JY;YAC/BlC,QAAQoB,UAAUC,YAAV,CAAZ;;YAEI,CAACC,MAAMC,OAAN,CAAcvB,KAAd,CAAL,EAA2B;kBACjB,IAAIwB,KAAJ,CAAU,4DAAV,CAAN;;;;YAIAX,WAAW,OAAOqB,IAAP,KAAgB,UAAhB,GAA6BlC,MAAMmC,MAAN,CAAaD,IAAb,CAA7B,GAAkDlC,MAAMmC,MAAN,gCAAgBD,IAAhB,EAAjE;eACO,CACHrB,QADG,EAEHH,WAAW,QAAX,EAAqBV,KAArB,EAA4Ba,QAA5B,CAFG,CAAP;KAtKuB;UAAA,kBA4KpBO,SA5KoB,EA4KTC,YA5KS,EA4KKe,UA5KL,EA4KiB;YACpCtC,SAASsB,UAAUC,YAAV,KAA2B,EAAxC;YACIR,WAAWlB,MAAMG,MAAN,CAAf;YACIuC,OAAO,EAAX;aACK,IAAIxC,GAAT,IAAgBuC,UAAhB,EAA4B;gBACpBA,WAAW5B,cAAX,CAA0BX,GAA1B,CAAJ,EAAoC;oBAC5ByC,mBAAmBF,WAAWvC,GAAX,CAAvB;oBACI0C,mBAAmBzC,OAAOD,GAAP,CAAvB;oBACIyC,qBAAqBC,gBAAzB,EAA2C;6BAC9B1C,GAAT,IAAgByC,gBAAhB;wBACIE,aAAa1C,OAAOU,cAAP,CAAsBX,GAAtB,IAA6B,QAA7B,GAAwC,KAAzD;yBACKA,GAAL,IAAYa,WAAW8B,UAAX,EAAuBD,gBAAvB,EAAyCD,gBAAzC,CAAZ;;;;;eAKL,CAACzB,QAAD,EAAWwB,IAAX,CAAP;KA5LuB;aAAA,qBA+LjBjB,SA/LiB,EA+LNC,YA/LM,EA+LQoB,WA/LR,EA+LkB;YACrC3C,SAASsB,UAAUC,YAAV,CAAb;YACIR,WAAWlB,MAAMG,MAAN,CAAf;YACIuC,OAAO,EAAX;aACK,IAAIxC,GAAT,IAAgB4C,WAAhB,EAA0B;gBAClBA,YAASjC,cAAT,CAAwBX,GAAxB,KAAgCgB,SAAShB,GAAT,MAAkBQ,SAAtD,EAAiE;yBACpDR,GAAT,IAAgB4C,YAAS5C,GAAT,CAAhB;qBACKA,GAAL,IAAYa,WAAW,KAAX,EAAkBL,SAAlB,EAA6BoC,YAAS5C,GAAT,CAA7B,CAAZ;;;;eAID,CAACgB,QAAD,EAAWwB,IAAX,CAAP;KA1MuB;UAAA,kBA6MpBjB,SA7MoB,EA6MTC,YA7MS,EA6MKqB,OA7ML,EA6Mc;YACjC7B,WAAW6B,QAAQtB,UAAUC,YAAV,CAAR,CAAf;eACO,CACHR,QADG,EAEHH,WAAWU,UAAUZ,cAAV,CAAyBa,YAAzB,IAAyC,QAAzC,GAAoD,KAA/D,EAAsED,UAAUC,YAAV,CAAtE,EAA+FR,QAA/F,CAFG,CAAP;KA/MuB;SAAA,iBAqNrBO,SArNqB,EAqNVC,YArNU,EAqNIK,MArNJ,EAqNY;YAC/BiB,QAAQvB,UAAUC,YAAV,CAAZ;;YAEIK,WAAW,IAAX,IAAoB,OAAOA,MAAP,KAAkB,UAAlB,IAAgCA,OAAOiB,KAAP,CAAxD,EAAwE;mBAC7D,CACHzB,kBADG,EAEHR,WAAW,QAAX,EAAqBiC,KAArB,EAA4BtC,SAA5B,CAFG,CAAP;;;eAMG,CAACsC,KAAD,EAAQ,IAAR,CAAP;KA/NuB;kBAAA,0BAkOZvB,SAlOY,EAkODC,YAlOC,EAkOauB,MAlOb,EAkOqB;YACxC3C,KAAKmB,UAAUC,YAAV,CAAT;;YAEI,OAAOpB,EAAP,KAAc,UAAlB,EAA8B;kBACpB,IAAIuB,KAAJ,CAAU,sEAAV,CAAN;;;YAGA,OAAOoB,MAAP,KAAkB,UAAtB,EAAkC;kBACxB,IAAIpB,KAAJ,CAAU,oEAAV,CAAN;;;YAGAX,WAAW,SAAXA,QAAW;mBAAaZ,GAAG2C,kCAAH,CAAb;SAAf;eACO,CACH/B,QADG,EAEHH,WAAW,QAAX,EAAqBT,EAArB,EAAyBY,QAAzB,CAFG,CAAP;KA9OuB;iBAAA,yBAoPbO,SApPa,EAoPFC,YApPE,EAoPYwB,KApPZ,EAoPmB;YACtC5C,KAAKmB,UAAUC,YAAV,CAAT;;YAEI,OAAOpB,EAAP,KAAc,UAAlB,EAA8B;kBACpB,IAAIuB,KAAJ,CAAU,qEAAV,CAAN;;;YAGA,OAAOqB,KAAP,KAAiB,UAArB,EAAiC;kBACvB,IAAIrB,KAAJ,CAAU,mEAAV,CAAN;;;YAGAX,WAAW,SAAXA,QAAW;mBAAagC,MAAM5C,8BAAN,CAAb;SAAf;eACO,CACHY,QADG,EAEHH,WAAW,QAAX,EAAqBT,EAArB,EAAyBY,QAAzB,CAFG,CAAP;;CAhQD;;;;;AA0QP,AAAO,IAAIiC,uBAAuBC,OAAOC,IAAP,CAAY7B,iBAAZ,CAA3B;;;;;AAKP,AAAO,IAAI8B,wBAAwBH,qBAAqBd,GAArB,CAAyB;WAAOnC,IAAI8B,KAAJ,CAAU,CAAV,CAAP;CAAzB,CAA5B;;ACnSP;;;;;;;;AAQA,AACA,AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0CA,AAAO,IAAIuB,WAAW,SAAXA,QAAW,CAACC,MAAD,EAASC,QAAT,EAAsB;;QAEpCC,sBAAsBtD,KAAK+C,oBAAL,EAA2B;eAAOM,SAAS5C,cAAT,CAAwBX,GAAxB,CAAP;KAA3B,CAA1B;QACIwD,mBAAJ,EAAyB;YACjBC,UAAU,EAACH,cAAD,EAAd;YACII,eAAeH,SAASC,mBAAT,CAAnB;eACOlC,kBAAkBkC,mBAAlB,EAAuCC,OAAvC,EAAgD,QAAhD,EAA0DC,YAA1D,CAAP;;;;QAIAC,iBAAiB,SAAjBA,cAAiB,MAAO;YACpBC,kBAAkBL,SAASvD,GAAT,CAAtB;YACI6D,mBAAmB3D,KAAK+C,oBAAL,EAA2B;mBAAOW,gBAAgBjD,cAAhB,CAA+BX,GAA/B,CAAP;SAA3B,CAAvB;;;;eAIO6D,mBACDvC,kBAAkBuC,gBAAlB,EAAoCP,MAApC,EAA4CtD,GAA5C,EAAiD4D,gBAAgBC,gBAAhB,CAAjD,CADC,GAEDR,SAASC,OAAOtD,GAAP,KAAe,EAAxB,EAA4B4D,eAA5B,CAFN;KANJ;;;QAYIE,qBAAqB,SAArBA,kBAAqB,CAAC/D,MAAD,EAASyC,IAAT,EAAkB;aAClC,IAAIxC,GAAT,IAAgBuD,QAAhB,EAA0B;gBAClBxD,OAAOY,cAAP,CAAsBX,GAAtB,KAA8B,CAACuD,SAAS5C,cAAT,CAAwBX,GAAxB,CAAnC,EAAiE;;;;kCAIlC2D,eAAe3D,GAAf,CALT;;gBAKjBgB,QALiB;gBAKP+C,YALO;;;;iBAOjB/D,GAAL,IAAY+D,YAAZ;;gBAEI/C,aAAaK,kBAAjB,EAAqC;uBAC1BrB,GAAP,IAAcgB,QAAd;;;;eAID,CAACjB,MAAD,EAASyC,IAAT,CAAP;KAfJ;;QAkBIf,MAAMC,OAAN,CAAc4B,MAAd,CAAJ,EAA2B;YACnBvD,UAAS,EAAb;YACIyC,QAAO,EAAX;aACK,IAAInC,IAAI,CAAb,EAAgBA,IAAIiD,OAAOhD,MAA3B,EAAmCD,GAAnC,EAAwC;;gBAEhC,CAACkD,SAAS5C,cAAT,CAAwBN,CAAxB,CAAL,EAAiC;wBACtB2D,IAAP,CAAYV,OAAOjD,CAAP,CAAZ;;;;mCAI2BsD,eAAetD,CAAf,CAPK;;gBAO/BW,QAP+B;gBAOrB+C,YAPqB;;gBAQhCtD,SAASsD,YAAT,CAAJ,EAA4B;sBACnB1D,CAAL,IAAU0D,YAAV;;gBAEA/C,aAAaK,kBAAjB,EAAqC;wBAC1B2C,IAAP,CAAYhD,QAAZ;;;;eAID8C,mBAAmB/D,OAAnB,EAA2ByC,KAA3B,CAAP;;;QAGAzC,SAAS,EAAb;QACIyC,OAAO,EAAX;SACK,IAAIxC,GAAT,IAAgBsD,MAAhB,EAAwB;;YAEhB,CAACC,SAAS5C,cAAT,CAAwBX,GAAxB,CAAL,EAAmC;mBACxBA,GAAP,IAAcsD,OAAOtD,GAAP,CAAd;;;;+BAI2B2D,eAAe3D,GAAf,CAPX;;YAOfgB,QAPe;YAOL+C,YAPK;;YAQhBtD,SAASsD,YAAT,CAAJ,EAA4B;iBACnB/D,GAAL,IAAY+D,YAAZ;;YAEA/C,aAAaK,kBAAjB,EAAqC;mBAC1BrB,GAAP,IAAcgB,QAAd;;;;WAID8C,mBAAmB/D,MAAnB,EAA2ByC,IAA3B,CAAP;CAhFG;;;;;;;;;;;;;;;;;;;;;;;;AAyGP,AAAO,IAAIyB,SAAS,SAATA,MAAS,CAACX,MAAD,EAASC,QAAT;WAAsBF,SAASC,MAAT,EAAiBC,QAAjB,EAA2B,CAA3B,CAAtB;CAAb;;AC9JP;;;;;;;;AAQA,IAAMW,sBAAsB,IAAIC,UAAJ,CAAe,CAAf,CAA5B;;AAEA,iBAAe,kBAAU;QACjB1C,MAAMC,OAAN,CAAc4B,MAAd,CAAJ,EAA2B;eAChBA,MAAP;;;;;QAKAc,QAAQ,CAACd,SAAS,EAAV,EAAce,KAAd,CAAoB,GAApB,CAAZ;QACItE,SAAS,EAAb;;SAEK,IAAIM,IAAI,CAAb,EAAgBA,IAAI+D,MAAM9D,MAA1B,EAAkCD,GAAlC,EAAuC;YAC/BiE,OAAOF,MAAM/D,CAAN,CAAX;YACIkE,oBAAoBD,KAAK1D,OAAL,CAAa,GAAb,CAAxB;;YAGI2D,qBAAqB,CAAzB,EAA4B;gBACpBA,oBAAoB,CAAxB,EAA2B;uBAChBP,IAAP,CAAYM,KAAKxC,KAAL,CAAW,CAAX,EAAcyC,iBAAd,CAAZ;uBACOD,KAAKxC,KAAL,CAAWyC,iBAAX,CAAP;;;mBAGGD,KAAKH,UAAL,CAAgB,CAAhB,MAAuBD,mBAA9B,EAAmD;oBAC3CM,kBAAkBF,KAAK1D,OAAL,CAAa,GAAb,CAAtB;oBACI4D,kBAAkB,CAAtB,EAAyB;0BACf,IAAI7C,KAAJ,CAAU,iCAAiC2B,MAA3C,CAAN;;;oBAGAmB,sBAAsBH,KAAKxC,KAAL,CAAW,CAAX,EAAc0C,eAAd,CAA1B;oBACI,WAAWE,IAAX,CAAgBD,mBAAhB,CAAJ,EAA0C;;2BAE/BT,IAAP,CAAY,CAACS,mBAAb;iBAFJ,MAIK,IAAI,qBAAqBC,IAArB,CAA0BD,mBAA1B,CAAJ,EAAoD;;2BAE9CT,IAAP,CAAa,IAAIW,QAAJ,CAAa,YAAYF,mBAAzB,CAAD,EAAZ;iBAFC,MAIA;0BACK,IAAI9C,KAAJ,CAAU,iCAAiC2B,MAA3C,CAAN;;;uBAGGgB,KAAKxC,KAAL,CAAW0C,kBAAkB,CAA7B,CAAP;;SAzBR,MA4BK;mBACMR,IAAP,CAAYM,IAAZ;;;;WAIDvE,MAAP;CAhDJ;;ACVA;;;;;;;;AAQA,AACA,AAEA,IAAI6E,kBAAkB,SAAlBA,eAAkB,CAACpD,YAAD,EAAesB,KAAf,EAAyB;MACvCtB,gBAAgB,IAApB,EAA0B;WACfsB,KAAP;;;MAGA+B,OAAOC,UAAUtD,YAAV,CAAX;;MAEIzB,SAAS,EAAb;MACIgF,UAAUhF,MAAd;OACK,IAAIM,IAAI,CAAb,EAAgBA,IAAIwE,KAAKvE,MAAL,GAAc,CAAlC,EAAqCD,GAArC,EAA0C;cAC5B0E,QAAQF,KAAKxE,CAAL,CAAR,IAAmB,EAA7B;;UAEIwE,KAAKA,KAAKvE,MAAL,GAAc,CAAnB,CAAR,IAAiCwC,KAAjC;SACO/C,MAAP;CAbJ;;;;;;;;;;;AAyBA,AAAO,IAAIiF,QAAM,SAANA,MAAM,CAAC1B,MAAD,EAASuB,IAAT,EAAe/B,KAAf;SAAyBmB,OAAOX,MAAP,EAAesB,gBAAgBC,IAAhB,EAAsB,EAACI,MAAMnC,KAAP,EAAtB,CAAf,CAAzB;CAAV;;;;;;;;;;;AAWP,AAAO,IAAIkB,OAAO,SAAPA,IAAO,CAACV,MAAD,EAASuB,IAAT,EAAe/B,KAAf;SAAyBmB,OAAOX,MAAP,EAAesB,gBAAgBC,IAAhB,EAAsB,EAACK,OAAOpC,KAAR,EAAtB,CAAf,CAAzB;CAAX;;;;;;;;;;;AAWP,AAAO,IAAIqC,UAAU,SAAVA,OAAU,CAAC7B,MAAD,EAASuB,IAAT,EAAe/B,KAAf;SAAyBmB,OAAOX,MAAP,EAAesB,gBAAgBC,IAAhB,EAAsB,EAACO,UAAUtC,KAAX,EAAtB,CAAf,CAAzB;CAAd;;;;;;;;;;;AAWP,AAAO,IAAIuC,MAAM,SAANA,GAAM,CAAC/B,MAAD,EAASuB,IAAT,EAAehD,MAAf;SAA0BoC,OAAOX,MAAP,EAAesB,gBAAgBC,IAAhB,EAAsB,EAACS,MAAMzD,MAAP,EAAtB,CAAf,CAA1B;CAAV;;;;;;;;;;;AAWP,AAAO,IAAI0D,QAAQ,SAARA,KAAQ,CAACjC,MAAD,EAASuB,IAAT,EAAehD,MAAf;SAA0BoC,OAAOX,MAAP,EAAesB,gBAAgBC,IAAhB,EAAsB,EAACW,QAAQ3D,MAAT,EAAtB,CAAf,CAA1B;CAAZ;;;;;;;;;;;AAWP,AAAO,IAAI4D,WAAW,SAAXA,QAAW,CAACnC,MAAD,EAASuB,IAAT,EAAe9C,KAAf;SAAyBkC,OAAOX,MAAP,EAAesB,gBAAgBC,IAAhB,EAAsB,EAACa,WAAW3D,KAAZ,EAAtB,CAAf,CAAzB;CAAf;;;;;;;;;;;AAWP,AAAO,IAAI4D,SAAS,SAATA,MAAS,CAACrC,MAAD,EAASuB,IAAT,EAAe/B,KAAf;SAAyBmB,OAAOX,MAAP,EAAesB,gBAAgBC,IAAhB,EAAsB,EAACe,SAAS9C,KAAV,EAAtB,CAAf,CAAzB;CAAb;;;;;;;;;;;;;AAaP,AAAO,IAAI+C,SAAS,SAATA,MAAS,CAACvC,MAAD,EAASuB,IAAT,EAAe7C,KAAf,EAAsBb,WAAtB,EAAgD;oCAAVc,KAAU;SAAA;;;MAC5DI,QAAQL,KAAR,EAAeb,WAAf,SAA+Bc,KAA/B,CAAJ;SACOgC,OAAOX,MAAP,EAAesB,gBAAgBC,IAAhB,EAAsB,EAACiB,SAASzD,IAAV,EAAtB,CAAf,CAAP;CAFG;;;;;;;;;;;AAcP,AAAO,IAAIF,MAAM,SAANA,GAAM,CAACmB,MAAD,EAASuB,IAAT,EAAe3C,QAAf;SAA4B+B,OAAOX,MAAP,EAAesB,gBAAgBC,IAAhB,EAAsB,EAACkB,MAAM7D,QAAP,EAAtB,CAAf,CAA5B;CAAV;;;;;;;;;;;AAWP,AAAO,IAAIE,SAAS,SAATA,MAAS,CAACkB,MAAD,EAASuB,IAAT,EAAe3C,QAAf;SAA4B+B,OAAOX,MAAP,EAAesB,gBAAgBC,IAAhB,EAAsB,EAACmB,SAAS9D,QAAV,EAAtB,CAAf,CAA5B;CAAb;;;;;;;;;;;AAWP,AAAO,IAAII,SAAS,SAATA,MAAS,CAACgB,MAAD,EAASuB,IAAT,EAA2B;qCAATxC,IAAS;QAAA;;;MACvC4D,UAAU5D,KAAK/B,MAAL,KAAgB,CAAhB,GAAoB,EAAC4F,SAAS7D,KAAK,CAAL,CAAV,EAApB,GAAyC,EAAC6D,SAAS7D,IAAV,EAAvD;SACO4B,OAAOX,MAAP,EAAesB,gBAAgBC,IAAhB,EAAsBoB,OAAtB,CAAf,CAAP;CAFG;;;;;;;;;;;AAcP,AAAO,IAAIE,QAAQ,SAARA,KAAQ,CAAC7C,MAAD,EAASuB,IAAT,EAAe/B,KAAf;SAAyBmB,OAAOX,MAAP,EAAesB,gBAAgBC,IAAhB,EAAsB,EAACuB,QAAQtD,KAAT,EAAtB,CAAf,CAAzB;CAAZ;;;;;;;;;;;AAWP,AAAO,IAAIF,aAAW,SAAXA,WAAW,CAACU,MAAD,EAASuB,IAAT,EAAe/B,KAAf;SAAyBmB,OAAOX,MAAP,EAAesB,gBAAgBC,IAAhB,EAAsB,EAACwB,WAAWvD,KAAZ,EAAtB,CAAf,CAAzB;CAAf;;;;;;;;;;;AAWP,AAAO,IAAIwD,QAAQ,SAARA,KAAQ,CAAChD,MAAD,EAASuB,IAAT,EAAehC,OAAf;SAA2BoB,OAAOX,MAAP,EAAesB,gBAAgBC,IAAhB,EAAsB,EAAC0B,QAAQ1D,OAAT,EAAtB,CAAf,CAA3B;CAAZ;;;;;;;;;;;AAWP,AAAO,IAAI2D,OAAO,SAAPA,IAAO,CAAClD,MAAD,EAASuB,IAAT;MAAehD,MAAf,uEAAwB,IAAxB;SAAiCoC,OAAOX,MAAP,EAAesB,gBAAgBC,IAAhB,EAAsB,EAAC4B,OAAO5E,MAAR,EAAtB,CAAf,CAAjC;CAAX;;;;;;;;;;;AAWP,AAAO,IAAI6E,gBAAgB,SAAhBA,aAAgB,CAACpD,MAAD,EAASuB,IAAT,EAAe9B,MAAf;SAA0BkB,OAAOX,MAAP,EAAesB,gBAAgBC,IAAhB,EAAsB,EAAC8B,gBAAgB5D,MAAjB,EAAtB,CAAf,CAA1B;CAApB;;;;;;;;;;;AAWP,AAAO,IAAI6D,eAAe,SAAfA,YAAe,CAACtD,MAAD,EAASuB,IAAT,EAAe7B,KAAf;SAAyBiB,OAAOX,MAAP,EAAesB,gBAAgBC,IAAhB,EAAsB,EAACgC,eAAe7D,KAAhB,EAAtB,CAAf,CAAzB;CAAnB;;;;;;;;;;;;;;;AAeP,AAAO,IAAI8D,YAAY,SAAZA,SAAY,CAACxD,MAAD,EAASuB,IAAT,EAAekC,SAAf,EAA0BlE,OAA1B,EAAsC;MACrDpB,MAAMC,OAAN,CAAcqF,SAAd,CAAJ,EAA8B;;UACtBC,eAAeD,UAAU5E,GAAV,CAAc;eAAU8E,OAAO3D,MAAP,CAAV;OAAd,CAAnB;UACI4D,eAAe,SAAfA,YAAe;eAASrE,2CAAWmE,YAAX,UAAyBlE,KAAzB,GAAT;OAAnB;;WACOwD,MAAMhD,MAAN,EAAcuB,IAAd,EAAoBqC,YAApB;;;;;;;MAGPC,aAAaJ,UAAUzD,MAAV,CAAjB;MACI4D,eAAe,SAAfA,YAAe;WAASrE,QAAQsE,UAAR,EAAoBrE,KAApB,CAAT;GAAnB;SACOwD,MAAMhD,MAAN,EAAcuB,IAAd,EAAoBqC,YAApB,CAAP;CATG;;AC3OP;;;;;;;;AAQA,AACA,AACA,AAEA,IAAME,iBAAiB,EAAvB;;AAEA,IAAIC,gBAAgB,SAAhBA,aAAgB,CAACvE,MAAD,EAAQS,QAAR;WAAqBH,sBAAsBd,MAAtB,CACrC,UAACgF,OAAD,EAAUC,QAAV,EAAuB;gBACXA,QAAR,IAAoB,UAAC1C,IAAD,EAAmB;8CAATxC,IAAS;oBAAA;;;gBAC/BmF,qCAAoB,MAAMD,QAA1B,EAAqClF,KAAK/B,MAAL,KAAgB,CAAhB,GAAoB+B,KAAK,CAAL,CAApB,GAA8BA,IAAnE,CAAJ;gBACIoF,cAActB,MAAM5C,QAAN,EAAgBsB,IAAhB,EAAsB2C,eAAtB,CAAlB;mBACOH,cAAcvE,MAAd,EAAqB2E,WAArB,CAAP;SAHJ;eAKOH,OAAP;KAPiC,EASrC;aAAA,mBACY;mBACGrD,OAAOnB,MAAP,EAAcS,QAAd,CAAP;SAFR;gBAAA,yBAKe;mBACAF,SAASP,MAAT,EAAgBS,QAAhB,CAAP;;KAf6B,CAArB;CAApB;;;;;;;;;;AA4BA,aAAe;WAAU8D,cAAc/D,MAAd,EAAsB8D,cAAtB,CAAV;CAAf;;AC1CA;;;;;;;;AAQA,AACA,AACA,AAEA,IAAIM,cAAc,SAAdA,WAAc;WAAYtE,sBAAsBd,MAAtB,CAC1B,UAACqF,KAAD,EAAQJ,QAAR,EAAqB;cACXA,QAAN,IAAkB,UAAC1C,IAAD,EAAmB;8CAATxC,IAAS;oBAAA;;;gBAC7BmF,qCAAoB,MAAMD,QAA1B,EAAqClF,KAAK/B,MAAL,KAAgB,CAAhB,GAAoB+B,KAAK,CAAL,CAApB,GAA8BA,IAAnE,CAAJ;gBACIoF,cAActB,MAAM5C,QAAN,EAAgBsB,IAAhB,EAAsB2C,eAAtB,CAAlB;mBACOE,YAAYD,WAAZ,CAAP;SAHJ;eAKOE,KAAP;KAPsB,EAS1B;aAAA,mBACY;gBACA5H,SAAS,SAATA,MAAS;uBAASkE,OAAOnB,KAAP,EAAcS,QAAd,CAAT;aAAb;mBACOF,QAAP,GAAkB;uBAASA,SAASP,KAAT,EAAgBS,QAAhB,CAAT;aAAlB;mBACOxD,MAAP;SAJR;qBAAA,2BAOoB;mBACL;uBAASsD,SAASP,KAAT,EAAgBS,QAAhB,CAAT;aAAP;;KAjBkB,CAAZ;CAAlB;;AAsBA,IAAMqE,gBAAgBF,YAAY,EAAZ,CAAtB;;;;;;;;;AASA,aAAe;WAAME,aAAN;CAAf;;AC3CA;;;;;;GAQA,AACA,AAEA,AACA,AAIA,AAKA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}